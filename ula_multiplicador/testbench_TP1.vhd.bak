library ieee;
use ieee.std_logic_1164.all;

entity testbench is
end testbench;

architecture tb of testbench is
	 signal inicio, reset, clk: in std_logic;
			  entA, entB: in std_logic_vector(N-1 downto 0); 
			  saidaL, saidaH: out std_logic_vector(N-1 downto 0);
			  pronto: out std_logic;

begin
   UUT : entity work.multiplicador_v1 port map (clk => clk, reset => reset, entA => entA, entB => entB, saidaL => saidaL, saidaH => saidaH);

   tb1 : process
        constant period: time := 20 ns;
        begin
            clk <= '1';
				reset <= '0';
            wait for period;
				
				inicio => '1';
				entA => "0010";
				entB => "0011";
            assert(saidaH = "0000")
				assert(saidaL = "1001")
            report "teste falhou no 1° ciclo"  severity error;
				
				clk <= '0';
				inicio => '0';
				wait for period;
				
            clk <= '1';
            wait for period;
				
				inicio => '1';
            entA => "0100";
				entB => "0011";
            assert(saidaH = "0000")
				assert(saidaL = "1101")
            report "teste falhou no 2° ciclo"  severity error;

				clk <= '0';
				inicio => '0';
				wait for period;
				
            inicio => '1';
				entA => "0000";
				entB => "0011";
            assert(saidaH = "0000")
				assert(saidaL = "0000")
            report "teste falhou no 3° ciclo"  severity error;
				
				clk <= '0';
				inicio => '0';
				wait for period;
				
            clk <= '1';
            wait for period;
				inicio => '1';
				entA => "0001";
				entB => "0011";
            assert(saidaH = "0000")
				assert(saidaL = "0011")
            report "teste falhou no 4° ciclo"  severity error;
			
				clk <= '0';
				inicio => '0';
				wait for period;
				
            clk <= '1';
            wait for period;
				
				inicio => '1';
            entA => "0010";
				entB => "0011";
            assert(saidaH = "0010")
				assert(saidaL = "1111")
            report "teste falhou no 5° ciclo, mas ele deveria falhar mesmo" severity error;


            wait;
	end process;
end tb ;